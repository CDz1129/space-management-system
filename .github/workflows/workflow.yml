name: Master Branch

on:
  push:
    branches:
      - 'master'

jobs:
  test:
    name: Unit-Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Maven Package
        run: mvn -B clean package
      - name: Maven Verify
        run: mvn -B clean verify -DskipTests
  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: [test]
    env:
      TAG_NAME: im-core:1.0.0-test
      REPO_NAME: cdzdocker
      IMGE_NAME: ${{ secrets.DOCKER_REPO }}/${{ secrets.DOCKER_USERNAME }}/im-core:1.0.0-test
    steps:
      - uses: actions/checkout@v1
      - name: Docker Hub Sign-in
        uses: docker/login-action@v1.8.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub 
          registry: ${{ secrets.DOCKER_REPO }}
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@9379083e426e2e84abb80c8c091f5cdeb7d3fd7a
        uses: docker/build-push-action@v2.3.0
        with:
          tags: ${{ secrets.DOCKER_REPO }}/cdzdocker/im-core:1.0.0-test
          push: true

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
#           port: ${{ secrets.PORT }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login ${{ secrets.DOCKER_REPO }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin 
            docker container stop im-core > /dev/null 2>&1 && echo 'stop container' || echo 'nothing to stop'
            docker container rm im-core > /dev/null 2>&1 && echo 'removed container' || echo 'nothing to remove'
            docker pull cdzdocker/im-core:1.0.0-test
            docker run cdzdocker/im-core:1.0.0-test
        
          
        
